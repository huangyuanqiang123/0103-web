CSS定位
布局：考虑兼容（在每个浏览器中的效果）
原理：对px像素点的解释不同,数字大，造成的误差就大
建议不要出现大于100px数值
定位：尽量防止大值px出现
position:
		五个值：
			默认：static   静态的
			relative     相对的
			absolute     绝对的
			fixed        固定的
			inherit      继承的
relative:相对定位，不脱离文档流
		left top bottom right来定义盒子的位置 
		四个参数的值不改变盒子大小
		margin-left margin-top margin-bottom margin-right改变盒子大小
		body里面div,他的relative相对于浏览器边缘的left top
		实质是相对于外面盒子的left top
		理解：在布局时，如果相对定位前面有一个图片，这个图片就会起到占位的作用，后面相对定位图片的位置就会根据前面占位的图片的位置来确定自己的位置 
absolute:绝对定位，脱离文档流（理解成前面有多少元素对绝对定位没有什么影响）
	relative和absolute解决问题：html元素的叠加问题
现实性的问题：
	解决叠加问题中，如果第一层有误差，第二层就有误差，原来位置错位的现象，尤其发生在px大值的时候。
	使用关键：改变一个思维：把relative定义在第一层上，第二层定义absolute
		<div id=‘relative’><—这层盒子没有脱离文档 —>
			<div id=‘absolute’><—这层脱离文档，但不会离开父类—>
			</div>
		</div>
	相对定位和绝对定位在布局中理解成整体和部分的概念，当有一个整体，整体包含若干个元素个体，整体设为relative，不会脱离文档，还在我们可以控制的文档内，个体设为absolute,个体无论怎么定位，都超不过整体，也就是说相对于整体，调整一下整体位置，个体也会一起活动，
fixed
	与absolute相同，但不同在于固定。它会固定在页面中的某个位置，不会跟着页面的滚动而滚动
	常常用在广告位的宣传上。
在布局时，导航或者菜单一类的内容，统一做成有序列表或无序列表，常用无序列表
常用通用设置 ：
	*{
		padding:0;
		margin:0 auto;
		font-size:12px;
	}
	清除原有html元素margin,padding值 
	字体可以看整体页面中字号多次重复的内容 
	一般情况下，我们页面中应用的所有ul都需要去掉圆点：
		css语句:list-style:none
	一般情况下，页面所有链接都是不带下划线的，可以统一先把a的下划线去掉。
		css语句：a{ text-decoration:none}
	一般情况下，导航都是横向显示，我们用的ul li无序列表中li需要把块级元素转成行内元素：float:left(采用左浮动 ）
		ul li{float:left}
	以上设置语句是我们分析出来的通用代码。
	做项目前，都要分析讨论适合于本项目的相关通用代码
小图片尽量采用加载雪碧图或者精灵图处理，原理把多个小图放在一张图片上。同时雪碧图会用背景的方式来加载
	加载雪碧图之后，显示其它图片用background-position
CSS关于动作的选择器：
	伪类选择器：
		h4 a有伪类选择器：
				链接的四种状态：
					页面正常状态：link
					鼠标经过链接时:  hover
					鼠标点击链接时:  active
					鼠标点击后：     visited
			伪类选择器只能作用在自己的身上
		h5:
			每个元素均可做伪类选择器
		写法 ：
			html元素:link
			html元素:hover
			html元素:active
			html元素:visited
			

	
	
	


	

